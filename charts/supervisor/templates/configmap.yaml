apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ template "supervisor.name" $ }}-env"
  labels:
    app: "{{ template "supervisor.name" $ }}"
data:
  PUBLIC_ADDRESS: "{{ .Values.config.publicAddress }}"
  TLS_ENABLE: "{{ .Values.config.tls.enable | ternary "true" "false" }}"
{{- if .Values.config.tls.enable }}
  TLS_KEY: "{{ .Values.config.tls.key }}"
  TLS_CERT: "{{ .Values.config.tls.cert }}"
{{- end }}

  METASCHEDULER_ENDPOINT_RPC: "{{ .Values.config.metascheduler.endpoint.rpc }}"
  METASCHEDULER_ENDPOINT_WS: "{{ .Values.config.metascheduler.endpoint.ws }}"
  METASCHEDULER_SMART_CONTRACT: "{{ .Values.config.metascheduler.smartContract }}"
  METASCHEDULER_CPU_PRICE_PER_MIN:  "{{ .Values.config.metascheduler.prices.cpuPerMin }}"
  METASCHEDULER_GPU_PRICE_PER_MIN:  "{{ .Values.config.metascheduler.prices.gpuPerMin }}"
  METASCHEDULER_MEM_PRICE_PER_MIN:  "{{ .Values.config.metascheduler.prices.memPerMin }}"
  METASCHEDULER_LABELS: "{{ template "supervisor.metascheduler.labels" $ }}"

  SBATCH_ENDPOINT: "{{ .Values.config.sbatchService.endpoint }}"
  SBATCH_TLS_ENABLE: "{{ .Values.config.sbatchService.tls.enable | ternary "true" "false" }}"
{{- if .Values.config.sbatchService.tls.enable }}
  SBATCH_TLS_INSECURE: "{{ .Values.config.sbatchService.tls.insecure | ternary "true" "false" }}"
  SBATCH_CA: "{{ .Values.config.sbatchService.tls.ca }}"
{{- end }}

  SLURM_SSH_ADDRESS: "{{ .Values.config.slurm.ssh.address }}"
  SLURM_SSH_ADMIN_USER: "{{ .Values.config.slurm.ssh.adminUser }}"

  SLURM_SBATCH_PATH: "{{ .Values.config.slurm.paths.sbatch }}"
  SLURM_SCANCEL_PATH: "{{ .Values.config.slurm.paths.scancel }}"
  SLURM_SQUEUE_PATH: "{{ .Values.config.slurm.paths.squeue }}"
  SLURM_SCONTROL_PATH: "{{ .Values.config.slurm.paths.scontrol }}"
  SLURM_SINFO_PATH: "{{ .Values.config.slurm.paths.sinfo }}"
  SLURM_PARTITION: "{{ .Values.config.slurm.partition }}"

  BENCHMARK_HPL_IMAGE: "{{ .Values.config.benchmark.hpl.image }}"
  BENCHMARK_HPL_SINGLE_NODE: "{{ .Values.config.benchmark.hpl.singleNode | ternary "true" "false" }}"
  BENCHMARK_OSU_IMAGE: "{{ .Values.config.benchmark.osu.image }}"
  BENCHMARK_IOR_IMAGE: "{{ .Values.config.benchmark.ior.image }}"
  BENCHMARK_IOR_SINGLE_NODE: "{{ .Values.config.benchmark.ior.singleNode | ternary "true" "false" }}"
  BENCHMARK_SPEEDTEST_IMAGE: "{{ .Values.config.benchmark.speedtest.image }}"
  BENCHMARK_DISABLE: "{{ .Values.config.benchmark.disable | ternary "true" "false" }}"
  BENCHMARK_RUN_AS: "{{ .Values.config.benchmark.runAs }}"
  BENCHMARK_UNRESPONSIVE: "{{ .Values.config.benchmark.unresponsive | ternary "true" "false" }}"
  BENCHMARK_TIME_LIMIT: "{{ .Values.config.benchmark.timeLimit }}"
  BENCHMARK_UCX: "{{ .Values.config.benchmark.ucx.enable | ternary "true" "false" }}"
  BENCHMARK_AFFINITY: "{{ .Values.config.benchmark.ucx.affinity }}"
  BENCHMARK_TRANSPORT: "{{ .Values.config.benchmark.ucx.transport }}"
  BENCHMARK_TRACE: "{{ .Values.config.benchmark.trace | ternary "true" "false" }}"
